# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

variables:
  environment: develop
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  resourceGroup: 'playground'
  appName: 'standa-playground'
  slot: 'test'
  productionSlot: 'production'
  azureSubscription: 'Playground'
  stagingUrl: 'https://standa-playground-test.azurewebsites.net'
  url: 'https://standa-playground.azurewebsites.net'

trigger:
- master
pr:
- master
pool:
  vmImage: 'windows-latest'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
      - task: NuGetToolInstaller@1
      - task: NuGetCommand@2
        inputs:
          restoreSolution: '$(solution)'

      - task: VSBuild@1
        inputs:
          solution: '$(solution)'
          msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(Build.ArtifactStagingDirectory)"'
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'

      - publish: $(Build.ArtifactStagingDirectory)
        artifact: DeployPackage

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: $(Build.SourcesDirectory)\deploytools.ps1
          artifactName: deploytools

- stage: Deploy
  jobs:
  - deployment: Deploy
    displayName: Deploy the application
    environment: $(environment)
    strategy:
      runOnce:
        preDeploy:
          steps:
          - powershell: echo PreSolution $(solution)
        deploy:
          steps:
          # TODO: Instead of checking out again, publish an artifact in the Build job containing what we are going to need below
          
          - checkout: self          
          - powershell: echo $PSVersionTable.PSVersion
            displayName: Verify configuration
          - task: AzureRMWebAppDeployment@4
            displayName: Azure App Service Deploy
            inputs:
              ConnectionType: AzureRM
              ConnectedServiceName: $(azureSubscription)
              WebAppKind: webApp
              WebAppName: $(appName)
              DeployToSlotOrASEFlag: true
              ResourceGroupName: $(resourceGroup)
              SlotName: $(slot)
              # It's important to specify package path in this way
              Package: $(Pipeline.Workspace)\DeployPackage\**\*.zip

          - task: AzureAppServiceManage@0
            displayName: Start Swap With Preview
            inputs:
              azureSubscription: $(azureSubscription)
              resourceGroupName: $(resourceGroup)
              webAppKind: webApp
              webAppName: $(appName)
              action: 'Start Swap With Preview'
              sourceSlot: $(slot)
              targetSlot: $(productionSlot)

          - powershell: . $(Build.SourcesDirectory)\deploytools.ps1 ; Retry({ SendWebRequest $(stagingUrl) }) 15 5
            displayName: Wait for the staging slot to initialize

          - task: AzureAppServiceManage@0
            displayName: Cancel Swap
            condition: failed()
            inputs:
              azureSubscription: $(azureSubscription)
              resourceGroupName: $(resourceGroup)
              webAppKind: webApp
              webAppName: $(appName)
              action: 'Cancel Swap'
          
          - task: AzureAppServiceManage@0
            displayName: Complete Swap
            inputs:
              azureSubscription: $(azureSubscription)
              resourceGroupName: $(resourceGroup)
              webAppKind: webApp
              webAppName: $(appName)
              action: 'Complete Swap'
              sourceSlot: $(slot)
              targetSlot: $(productionSlot)

          - powershell: . $(Build.SourcesDirectory)\deploytools.ps1 ; Retry({ SendWebRequest $(stagingUrl) }) 15 3
            displayName: Verify the production web response times