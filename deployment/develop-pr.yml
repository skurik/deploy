variables:  
  azureSubscription: 'Playground'  
  environment: develop  
  resourceGroup: 'playground'
  appName: 'standa-playground'
  destinationAppName: 'pipeline-cloned-app'
  slot: 'test'
  productionSlot: 'production'  
  stagingUrl: 'https://standa-playground-test.azurewebsites.net'
  url: 'https://standa-playground.azurewebsites.net'
  deploytoolsArtifact: 'DeployTools'
  webRequestAttempts: 5
  webRequestDelayInSeconds: 15
  location: 'West Europe'
  appServicePlan: 'ASP-playground-af4a'
  sqlServerResourceGroup: 'cloud-shell-storage-westeurope'
  sqlServerName: 'pipeline-created-sqlserver'
  sqlServerUserName: 'MEWS-E87C21D3-9A9F-4369-B039-4738B3CBE65F'
  sqlServerPassword: '6E3DE82B-DF77-4C1B-8AF3-E104E7D5FBBC'
  sqlDatabaseName: 'pipeline-created-sqldb'
  sqlDatabaseEdition: 'Standard'  
  connectionStringName: 'mews-develop-sql-weu/mews-develop-db'

pr:
- develop
pool:
  vmImage: 'windows-latest'

stages:
- stage: Test
  jobs:
  - job: Test_Job_A
    steps:
    # - task: AzurePowerShell@4
    #   inputs:
    #     azureSubscription: $(azureSubscription)
    #     azurePowerShellVersion: latestVersion
    #     scriptType: inlineScript
    #     inline: Get-AzContext -ListAvailable

    # - task: AzurePowerShell@4
    #   inputs:
    #     azureSubscription: $(azureSubscription)
    #     azurePowerShellVersion: latestVersion
    #     scriptType: inlineScript
    #     inline: Get-AzWebApp -ResourceGroupName playground -Name standa-playground

    - task: AzurePowerShell@4
      displayName: Clone Web Application
      inputs:
        azureSubscription: $(azureSubscription)
        azurePowerShellVersion: latestVersion
        scriptType: filePath
        scriptPath: $(Build.SourcesDirectory)\cloneWebApp.ps1
        scriptArguments:
          -location "$(location)" `
          -appServicePlan $(appServicePlan) `
          -resourceGroup $(resourceGroup) `
          -sourceAppName $(appName) `
          -destinationAppName $(destinationAppName)

    - task: AzurePowerShell@4
      displayName: Create SQL Database
      inputs:
        azureSubscription: $(azureSubscription)
        azurePowerShellVersion: latestVersion
        scriptType: filePath
        scriptPath: $(Build.SourcesDirectory)\createSqlDatabase.ps1
        scriptArguments:
          -location "$(location)" `
          -resourceGroup $(sqlServerResourceGroup) `
          -serverName $(sqlServerName) `
          -serverUserName $(sqlServerUserName) `
          -serverUserPassword $(sqlServerPassword) `
          -edition $(sqlDatabaseEdition) `
          -databaseName $(sqlDatabaseName)

    - task: AzurePowerShell@4
      displayName: Update the web app settings
      inputs:
        azureSubscription: $(azureSubscription)
        azurePowerShellVersion: latestVersion
        scriptType: filePath
        scriptPath: $(Build.SourcesDirectory)\updateWebAppSettings.ps1
        scriptArguments:
          -resourceGroup $(resourceGroup) `
          -appName $(destinationAppName) `
          -connectionStringName $(connectionStringName) `
          -sqlServerName $(sqlServerName) `
          -databaseName $(sqlDatabaseName) `
          -serverUserName $(sqlServerUserName) `
          -serverUserPassword $(sqlServerPassword)

    # - powershell: Get-AzContext -ListAvailable
    #   displayName: Get available contexts
    # - powershell: Get-AzWebApp -ResourceGroupName playground -Name standa-playground
    #   displayName: Get web app

# - template: templates/build.yaml
# - template: templates/deploy.yaml
#   parameters:
#     azureSubscription: $(azureSubscription)
#     environment: $(environment)    
#     resourceGroup: $(resourceGroup)
#     appName: $(appName)
#     slot: $(slot)
#     productionSlot: $(productionSlot)
#     stagingUrl: $(stagingUrl)
#     url: $(url)
#     deploytoolsArtifact: $(deploytoolsArtifact)
#     webRequestAttempts: $(webRequestAttempts)
#     webRequestDelayInSeconds: $(webRequestDelayInSeconds)
